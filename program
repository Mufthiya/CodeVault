#dataset
import pandas as pd
data=pd.read_csv("/credit_card_fraud_dataset (1).csv")
print(data)
#ffill
data.ffill(inplace=True)
print(data)
#bfill
data.bfill(inplace=True)
print(data)
#remove duplicates
data.drop_duplicates(inplace=True)
print(data)
import pandas as pddf = pd.read_csv("/credit_card_fraud_dataset (1).csv")print(df.shape)   
# Rows, columns
countprint(df.columns) 
# Column names
print(df.info()) 
# Data types and nulls
print(df.describe())  
# Summary stats
# Fraud Detection - EDA & Data Visualization
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np df = pd.read_csv("/credit_card_fraud_dataset (1).csv")
print("üìä Dataset shape:", df.shape)
print("üßæ Columns:\n", df.columns)
print("\nüîç Missing values:\n", df.isnull().sum())
    if 'Class' in df.columns:   
    print("\nüéØ Class distribution:\n", df['Class'].value_counts())   
    sns.countplot(x='Class', data=df, palette='Set2') 
    plt.title("Fraud vs Non-Fraud Transactions")  
    plt.xlabel("Class (0 = Not Fraud, 1 = Fraud)")  
    plt.ylabel("Count")   
    plt.show()   
    sns.boxplot(x='Class', y='Amount', data=df, palette='coolwarm')   
    plt.title("Transaction Amount by Class")  
    plt.show()   
    plt.figure(figsize=(10,5))  
    sns.histplot(data=df[df['Class'] == 0], x='Time', bins=50, label='Not Fraud', color='green', kde=True) 
    sns.histplot(data=df[df['Class'] == 1], x='Time', bins=50, label='Fraud', color='red', kde=True) 
    plt.title("Transaction Time Distribution")    plt.legend()    plt.show()   
        if 'V14' in df.columns:        plt.figure(figsize=(8,4))        sns.kdeplot(df[df.Class == 0]['V14'], label="Not Fraud", shade=True)     
          sns.kdeplot(df[df.Class == 1]['V14'], label="Fraud", shade=True, color='red')    
          plt.title("Distribution of V14 by Class")   
          plt.legend()      
          plt.show()   
          sample_df = df.sample(n=1000, random_state=42)   
          sns.pairplot(sample_df, hue='Class', vars=['V1', 'V2', 'V3'], palette='husl') 
          plt.suptitle("Pairplot of Selected Features", y=1.02)
          plt.show()
           else: 
            print("\n‚ùó Error: 'Class' column not found in the DataFrame.")  
            print("Please check the CSV file and the column names.")
            plt.figure(figsize=(12,10))
            
            numeric_df = df.select_dtypes(include=np.number)
            corr = numeric_df.corr()sns.heatmap(corr, cmap='coolwarm', vmax=0.9, square=True)
            plt.title("Correlation Heatmap")
            plt.show()
0 commit commentsComments0¬†(0)CommentSubscribeYou're not recei
